[gd_scene load_steps=7 format=3 uid="uid://cokcnsuq4a15g"]

[ext_resource type="Script" uid="uid://bqtvcs7hyb1nv" path="res://Scripts/Structures/clickable_structure.gd" id="1_vyo28"]
[ext_resource type="Texture2D" uid="uid://cuv07g0rswdoc" path="res://Assets/Graphics/Structures/tree/TreeBare.png" id="2_trgpq"]
[ext_resource type="PackedScene" uid="uid://5qmvhqorv3gl" path="res://Scenes/Structures/clickable_area.tscn" id="4_6wuft"]

[sub_resource type="Shader" id="Shader_trgpq"]
code = "shader_type canvas_item;

uniform vec4 clr : source_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform int type : hint_range(1, 2) = 2;
uniform float thickness = 1.0;

const vec2[8] DIRECTIONS = {
	vec2(1.0, 0.0),
	vec2(0.0, 1.0),
	vec2(-1.0, 0.0),
	vec2(0.0, -1.0),
	vec2(1.0, 1.0),
	vec2(-1.0, 1.0),
	vec2(-1.0, -1.0),
	vec2(1.0, -1.0)
};

float gtz(float input) { return max(0, sign(input)); }
// returns 1 if input > 0, else 0

float check(sampler2D tex, vec2 from, vec2 size) {
	float result = 0.0;
	for (int i = 0; i < 4 * type; i++) {
		result += texture(tex, from + DIRECTIONS[i] * size * thickness).a;
	}
	return gtz(result);
}

void fragment() {
	COLOR = mix(COLOR, clr, check(TEXTURE, UV, TEXTURE_PIXEL_SIZE) - gtz(COLOR.a));
}

render_mode blend_mix;

// Wind settings
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);
uniform float offset = 0.0;

float getWind(vec2 vertex, vec2 uv, float time) {
	float diff = pow(maxStrength - minStrength, 2.0);
	float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
	float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0 - uv.y) - heightOffset);
	return wind;
}

void vertex() {
	float time = TIME * speed + offset;
	VERTEX.x += getWind(VERTEX.xy, UV, time);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_6wuft"]
shader = SubResource("Shader_trgpq")
shader_parameter/clr = Color(0.854902, 0.647059, 0.12549, 1)
shader_parameter/type = 2
shader_parameter/thickness = 0.0
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = 0.0
shader_parameter/heightOffset = 0.25
shader_parameter/offset = 0.0

[sub_resource type="RectangleShape2D" id="RectangleShape2D_trgpq"]
size = Vector2(128, 128)

[node name="BigTree" type="Node2D" node_paths=PackedStringArray("sprite") groups=["bigtree"]]
script = ExtResource("1_vyo28")
sprite = NodePath("BigTreeSprite")

[node name="BigTreeSprite" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_6wuft")
scale = Vector2(0.1, 0.1)
texture = ExtResource("2_trgpq")

[node name="ClickableArea" parent="." instance=ExtResource("4_6wuft")]

[node name="CollisionShape2D" parent="ClickableArea" index="0"]
shape = SubResource("RectangleShape2D_trgpq")

[connection signal="mouse_on_structure" from="ClickableArea" to="." method="_on_clickable_area_mouse_on_structure"]

[editable path="ClickableArea"]
